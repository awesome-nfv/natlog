includefile(../../release.yo)

htmlbodyopt(text)(#27408B)
htmlbodyopt(bgcolor)(#FFFAF0)
whenhtml(mailto(Frank B. Brokken: f.b.brokken@rug.nl))

DEFINEMACRO(lsoption)(3)(\
    bf(--ARG1)=tt(ARG3) (bf(-ARG2))\
)
DEFINEMACRO(laoption)(2)(\
    bf(--ARG1)=tt(ARG2)\
)
DEFINEMACRO(loption)(1)(\
    bf(--ARG1)\
)
DEFINEMACRO(soption)(1)(\
    bf(-ARG1)\
)

DEFINEMACRO(itx)(0)()
DEFINEMACRO(itemlist)(1)(ARG1)
DEFINEMACRO(tr)(3)(\
    row(cell(ARG1)cell()\
        cell(ARG2)cell()\
        cell(ARG3)))


DELETEMACRO(tt)
DEFINEMACRO(tt)(1)(em(ARG1))

COMMENT( man-request, section, date, distribution file, general name)
manpage(natlog)(1)(_CurYrs_)(natlog._CurVers_.tar.gz)
        (natlog)

COMMENT( man-request, larger title )
manpagename(natlog)(source-nat logging tool)

COMMENT( all other: add after () )
manpagesynopsis()
       bf(natlog) [OPTIONS] tt(command)

manpagesection(DESCRIPTION)

    Firewalls like bf(iptables)(1) usually offer tt(POSTROUTING) (source
network address translation, snat) facilities changing the source address of a
host behind the firewall to the address of the host before the firewall. With
tt(snat) the following combinations of IP addresses and port numbers are
encountered:
    itemization(
    it() the IP address and port number used by the host behind the firewall
(in this manual page referred to as tt(IPsrc, sport));
    it() the IP address and port number of the host tt(IPsrc) connects to (in
this manual page referred to as tt(IPdst, dport));
    it() the IP address and port number used by the firewalling host when
source natting tt(IPsrc) and tt(sport) (in this manual page referred to as
tt(IPfw, fwport)).
    )

    Source natting usually uses tt(sport) for tt(fwport), but tt(fwport) may
already be in use, in which case the firewalling host must use another,
available port to forward communication from tt(IPsrc, sport) to tt(IPdst,
dport). 

    The general scheme that applies to source natting, therefore, looks like
this:
        verb(
    IPsrc:sport is translated by the firewall to IPfw:fwport;
    IPfw:fwport is used when communicating with IPdst:dport.
        )
    From the perspective of the destination host the communication originates
at tt(IPfw::fwport) and consequently all communication (e.g., and incident
report) sent by the systems administrator maintaining tt(IPdst) to tt(IPfw)'s
systems administrator will refer to tt(IPfw:fwport), rather than to
tt(IPsrc::sport).

    Using the standard log facilities provided by tt(iptables) do not easily
allow us to relate tt(IPfw:fwport) to tt(IPsrc:sport), and tt(natlog) was
developed to fill in that particular niche.

    When running tt(natlog), messages are sent to the syslog daemon (e.g.,
bf(rsyslogd)(1)) and/or the standard output stream showing the essential
characteristics of the connection using source natting. Here is an example:
        verb(
    NATLOG: From 1338990672:55588 until 1338990747:807100:     
    192.168.19.72:4467 (via: 129.125.90.132:4467) to 200.49.219.180:443
        )
    In this example the values tt(1338990672:55588) and tt(1338990747:807100)
represent time stamps showing the begin- and end-times in seconds:microseconds
of the connection since Jan 1, 1970, 0:00 UTC. tt(Natlog) offers the
tt(--datetime) option if time representations like tt(Nov 2 13:29:11) are
preferred.

    The next value (tt(192.168.19.72:4467)) represents tt(IPsrc::sport). This
is followed by tt(129.125.90.132:4467), representing tt(IPfw:fwport). The
third pair of values (tt(200.49.219.180:443)) represents tt(IPdst:dport). 

    In this example, host tt(192.168.19.72), using port tt(4467), connected to
host tt(200.49.219.180), port tt(443). To this latter host the connection
appeared to have originated from tt(129.125.90.132) port tt(4467). The
provided log message easily allows us to related this to the `real' host and
port from which the connection originated: tt(192.168.19.72:4467).

    When tt(natlog) terminates tt(natlog) can no longer track connections that
are still open. If tt(natlog) was terminated by a tt(SIGTERM) signal, then it
sends a `terminating' line to syslog, followed by an overview of all still
open connections. The end-microseconds values of connections that are no
longer tracked are shown as tt(0000).

manpagesection(COMMANDS)

    itemization(
    it() tt(conntrack): this command can only be used on platforms using
bf(iptables)(1) on which bf(conntrack)(1) has also been installed. Information
about source-natted connections is obtained from bf(conntrack)(1)'s output.
    
    it() tt(indevice outdevice): tt(indevice) is the name of the device behind
the firewall. Addresses living behind the tt(indevice) are source-natted to
the firewall's IP address when passed on to the tt(outdevice); tt(outdevice)
is the name of the device to which source-natted packets are forwarded,
c.q. from where replies for source-natted hosts living behind the tt(indevice)
are received 
    )

manpagesection(OPTIONS)

    itemization(
    it() lsoption(config)(c)(config-path)nl()
       The argument tt(config-path) defines the path to the configuration file
        to be used by tt(natlog). By default the configuration file is
        expected in tt(/etc/natlog.conf). All configuration options have
        defaults, which are used when no configuration file and no
        command-line options are provided. Command-line options override
        configuration file options.

    it() laoption(conntrack-path)(path)nl()
       The path to the bf(conntrack)(1) program. By default this is
        tt(/usr/sbin/conntrack). The tt(conntrack) program must be available
        when requesting tt(natlog)'s tt(conntrack) command.

    it() laoption(delay-musecs)(musecs)nl()
       When tt(natlog) must run as a daemon, starting the daemon process may
        fail for various reasons. E.g., there may be an error in specifying
        the tt(conntrack) path, or the user may not have permissions to access
        the information made available by tt(contrack) or by the
        pcap-library. As tt(natlog)'s return value should indicate whether or
        not the daemon has successfully started, the daemon process must
        inform its parent tt(natlog) process about any irregularities that
        might have been encountered. Usually this information is immediately
        available, but it takes a moment before the daemon process can deduct
        that tt(natlog)'s conntrack mode runs OK. The amount of micro seconds
        the parent process will wait for the daemon to report an error
        condition can be configured with the tt(delay-musecs) option. Its
        default value is 500.000, boiling down to a maximum delay of half a
        second. Normally, there is no need to modify this value.

    it() loption(no-daemon)nl()
       By default, tt(natlog) runs in the background (a daemon). tt(Natlog)
        runs as an ordinary program (i.e., in the foreground when the option
        tt(no-daemon) is provided). When running as a daemon, tt(--stdout)
        (see below) is suppressed, and tt(--verbose) messages (see below) are
        sent to the sylog daemon, unless tt(--no-syslog) was specified.

    it() loption(help) (soption(h))nl()
       Write basic usage information to the standard output stream and
        terminate.

    it() loption(no-syslog)nl()
       By default tt(natlog) writes syslog messages to the tt(DAEMON) facility
        with priority tt(NOTICE). No messages are sent to the syslog daemon
        when this option is specified.

    it() lsoption(pid-file)(p)(path)nl()
       When tt(natlog) runs in the background, then tt(path) is the name of
        the path of the file holding the daemon's process-id. By default this
        is tt(/var/run/natlog.pid).
        
    it() loption(stdout) (soption(s))nl() 
       Syslog-equivalent messages are sent to the standard output.
        This option is implied by tt(--verbose), but is suppressed when
        tt(natlog) runs as a daemon..

    it() laoption(syslog-tag)(tag)nl()
       When syslog messages are generated they can be provided with a
        em(tag), which can be used to filter tt(natlog)'s syslog messages from
        the log-files. By default the tag tt(NATLOG) is used. See also section
        tt(RSYSLOG FILTERING) below.

    it() laoption(syslog-facility)(facility)nl()
       The facility that is used to write the syslog messages to. By default
        this is tt(DAEMON). For an overview of facilities and their meanings,
        see, e.g., bf(syslog)(3). With tt(natlog) the facilities tt(DAEMON,
        LOCAL0, LOCAL1, LOCAL2, LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7), and
        tt(USER) can be used.

    it() laoption(syslog-priority)(priority)nl()
       The priority that is used to write the syslog messages to. By default
        this is tt(NOTICE). For an overview of priorities and their meanings,
        see, e.g., bf(syslog)(3). With tt(natlog) all defined priorities can
        be used. E.g., tt( EMERG, ALERT, CRIT, ERR, WARNING, NOTICE, INFO) and
        tt(DEBUG).

    it() lsoption(time)(t)(spec)nl()
        By default time stamps written by tt(natlog) are in raw, numeric
        form. E.g.,
        verb(
NATLOG: From 1338990672:55588 until 1338990747:807100
        )
       These time stamps indicate times in seconds:microseconds since the
        beginning of the epoch, January 1, 1970, 0:00 UTC. This option can be
        used to change the seconds part of the time stamps to more
        conventional representations.nl()
       Specify tt(raw) (the default) for the default representation in seconds
        since the epoch; nl()
       specify tt(utc) for a representation like tt(Jun 6 13:29:11), using
        Universal Time Coordinated;nl()
       specify tt(local) for a representation like tt(Jun 6 13:29:11), using
        the local time zone defined by the computer running tt(natlog).

    it() loption(verbose)nl() 
       Additional messages about tt(natlog)'s mode of operation are sent to
        the standard output stream. When tt(natlog) runs as a daemon these
        messages are sent to the syslog daemon, unless tt(--no-syslog) was
        specified. 

    it() loption(version) (soption(v))nl() 
       Write tt(natlog)'s version number to the standard output stream and
        terminate.

    it() loption(warn) (soption(w))nl() 
       Warn about terminating connections not yet registered in tt(natlog)'s
        database. This normally only happens during a short period after
        starting tt(natlog), when existing connections haven't yet been
        noticed. 
    )
                    
manpagesection(RSYSLOG FILTERING)

    When using bf(rsyslogd)(1) property based filters may be used to filter
syslog messages and write them to a file of your choice. E.g., to filter
messages starting with the syslog message tag (e.g., tt(NATLOG)) use
        verb(
:syslogtag, isequal, "NATLOG:"   /var/log/natlog.log
:syslogtag, isequal, "NATLOG:"   ~
        )
    Note that the colon is part of the tag, but is not specified with the 
tt(syslog-tag) option.

    This causes all messages having the tt(NATLOG:) tag to be written on
tt(/var/log/natlog.log) after which they are discarded. More extensive
filtering is also supported, see, e.g.,
tt(http://www.rsyslog.com/doc/rsyslog_conf_filter.html) and
tt(http://www.rsyslog.com/doc/property_replacer.html)

manpagesection(EXAMPLES)

    Examples of tt(natlog) activations:
    itemization(
    it() tt(natlog --no-daemon --no-syslog -s tun0 eth0)nl()
        tt(Natlog) remains active as a foreground process, no syslog messages
are written, syslog-equivalent message are written to the standard
output. tt(Natlog) uses the pcap library to capture packets from the tt(tun0)
device (e.g., an bf(openvpn)(1) device), which is active behind the firewall,
and to capture packets from the tt(eth0) device, which is the device to where
source-natted packages are sent.

    it() tt(natlog conntrack)nl()
        Depending on the options specified in tt(/etc/natlog.conf) (or, if not
available, tt(natlog)'s default options) source-natted connections are
obtained from bf(conntrack)(1). By default tt(natlog) continues as a daemon
process, generating syslog messages using syslog tags tt(NATLOG:), and
containing information about source-natted connections.
    )

    Here is tt(natlog)'s default configuration file. Empty lines and lines
starting with hash-marks (#) are ignored. Options adhere to the 
    verb(
option  value 
    )
    syntax. Option and value are separated by white space, Option values may
consist of multiple words.
    verbinclude(../../etc/natlog.conf)
        
manpagesection(FILES)
    itemization(
    it() tt(/etc/natlog.conf): default configuration file.
    )

manpagesection(SEE ALSO)

    bf(conntrack)(1), bf(iptables)(1), bf(rsyslogd)(1), bf(syslog)(3)

manpagesection(BUGS)

    None reported

manpageauthor()

Frank B. Brokken (f.b.brokken@rug.nl).
